<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ErrH.WpfTools.Themes.ErrHBaseTheme"
                    >

    <Style x:Key="SharpFont" TargetType="{x:Type Window}">
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    
    <DropShadowBitmapEffect x:Key="Shadow270" Color="LightGray" Direction="270" />
    
    <Style x:Key="DefaultListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,3" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2"
                                           SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                           StrokeDashArray="1 2"
                                           StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            >
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          />
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="#1F26A0DA" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#A826A0DA" />
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="CornflowerBlue" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="White" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#FFDADADA" />
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="DodgerBlue" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="White" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#FF26A0DA" />
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="GhostWhite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListBoxItemStyle}" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    
    <Style TargetType="TabControl" BasedOn="{StaticResource {x:Type TabControl}}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
    </Style>

    
    
    
    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static Member=SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="White" />
            <SolidColorBrush x:Key="{x:Static Member=SystemColors.HighlightTextBrushKey}"
                                         Color="White" />
            <SolidColorBrush x:Key="{x:Static Member=SystemColors.InactiveSelectionHighlightBrushKey}"
                                         Color="CornflowerBlue" />                        
        </Style.Resources>
    </Style>
    
    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightCyan" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="GhostWhite" />
            </MultiTrigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="CornflowerBlue" />
            </Trigger>
            
        </Style.Triggers>
    </Style>
    
    <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AlternatingRowBackground" Value="GhostWhite" />
        <Setter Property="HorizontalGridLinesBrush" Value="Lavender" />
        <Setter Property="VerticalGridLinesBrush" Value="Lavender" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
    </Style>


</ResourceDictionary>