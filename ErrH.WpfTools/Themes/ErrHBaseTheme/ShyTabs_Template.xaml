<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ErrH.WpfTools.CustomControls"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" 
                    >

    
    <Style x:Key="ShyTabs_ToggleButtonStyle_Down" TargetType="ToggleButton">
        <Setter Property="Margin" Value="1" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Themes:ClassicBorderDecorator x:Name="Bd" BorderBrush="#00000000" BorderThickness="1" BorderStyle="None" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Height="19" SnapsToDevicePixels="True" Width="19">
                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" VerticalAlignment="Center"/>
                            </Themes:ClassicBorderDecorator>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ShyTabs_ToggleButtonStyle_Right" TargetType="{x:Type ToggleButton}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              Margin="0,4,0,0" 
                                              RecognizesAccessKey="True" 
                                              VerticalAlignment="Bottom"
                                              HorizontalAlignment="Left"
                                              >
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="270" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                            <Themes:ClassicBorderDecorator Grid.Row="1" 
                                                           x:Name="Bd" 
                                                           BorderBrush="#00000000" 
                                                           BorderThickness="1" 
                                                           BorderStyle="None" 
                                                           Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                                                           Width="19" Height="19" 
                                                           HorizontalAlignment="Left"
                                                           >
                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" VerticalAlignment="Center">
                                    <Path.LayoutTransform>
                                        <RotateTransform Angle="-90"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Themes:ClassicBorderDecorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ShyTabs_ToggleButtonStyle_Up" TargetType="{x:Type ToggleButton}">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Themes:ClassicBorderDecorator x:Name="Bd" BorderBrush="#00000000" BorderThickness="1" BorderStyle="None" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Height="19" SnapsToDevicePixels="True" Width="19">
                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" VerticalAlignment="Center">
                                    <Path.LayoutTransform>
                                        <RotateTransform Angle="180"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Themes:ClassicBorderDecorator>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ShyTabs_ToggleButtonStyle_Left" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Themes:ClassicBorderDecorator x:Name="Bd" BorderBrush="#00000000" BorderThickness="1" BorderStyle="None" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Height="19" SnapsToDevicePixels="True" Width="19">
                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" VerticalAlignment="Center">
                                    <Path.LayoutTransform>
                                        <RotateTransform Angle="90"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Themes:ClassicBorderDecorator>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ShyTabs_Splitter_ExpandRight" TargetType="{x:Type GridSplitter}">
        <Setter Property="Width" Value="10" />
        <Setter Property="ResizeBehavior" Value="PreviousAndCurrent" />
        <Setter Property="ResizeDirection" Value="Columns" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <Style x:Key="ShyTabs_Splitter_ExpandUp" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeDirection" Value="Rows" />
    </Style>




    <ControlTemplate x:Key="ShyTabs_ExpanderTemplate" TargetType="Expander">
        <Grid>
            <ToggleButton x:Name="HeaderSite" 
                            ContentTemplate="{TemplateBinding HeaderTemplate}" 
                            Content="{TemplateBinding Header}" 
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            />
            <Grid x:Name="ExpandSite"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Focusable="False" 
                    Visibility="Collapsed"
                    >
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RowDef0" />
                    <RowDefinition x:Name="RowDef1" />
                    <RowDefinition x:Name="RowDef2" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColDef0" />
                    <ColumnDefinition x:Name="ColDef1" />
                </Grid.ColumnDefinitions>

                <DockPanel x:Name="ContentDock">
                    <ContentPresenter DockPanel.Dock="Top"
                                        Content="{Binding TopContent, RelativeSource={RelativeSource AncestorType=local:ShyTabs}}"
                                        />
                    <local:ErrTabs x:Name="ErrTabs"
                                    ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType=local:ShyTabs}}"
                                    />
                </DockPanel>

                <GridSplitter x:Name="Splitter" />

            </Grid>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>

            <Trigger Property="ExpandDirection" Value="Down">
                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ShyTabs_ToggleButtonStyle_Down}" />
            </Trigger>

            <Trigger Property="ExpandDirection" Value="Right">
                <Setter TargetName="HeaderSite"  Property="Style" Value="{StaticResource ShyTabs_ToggleButtonStyle_Right}" />
                <Setter TargetName="ColDef0"     Property="Width" Value="{Binding InitialWidth, RelativeSource={RelativeSource AncestorType=local:ShyTabs}}" />
                <Setter TargetName="ColDef1"     Property="Width" Value="Auto" />
                <Setter TargetName="ContentDock" Property="Grid.Column" Value="0" />
                <Setter TargetName="ContentDock" Property="Grid.RowSpan" Value="3" />
                <Setter TargetName="Splitter"    Property="Grid.RowSpan" Value="3" />
                <Setter TargetName="Splitter"    Property="Grid.Column" Value="1" />
                <Setter TargetName="Splitter"    Property="Style" Value="{StaticResource ShyTabs_Splitter_ExpandRight}" />
                <Setter TargetName="ErrTabs"     Property="TabStripPlacement" Value="Left" />
            </Trigger>

            <Trigger Property="ExpandDirection" Value="Up">
                <Setter TargetName="HeaderSite"  Property="Style" Value="{StaticResource ShyTabs_ToggleButtonStyle_Up}" />
                <Setter TargetName="RowDef0"     Property="Height" Value="*" />
                <Setter TargetName="RowDef1"     Property="Height" Value="Auto" />
                <Setter TargetName="RowDef2"     Property="Height" Value="{Binding InitialHeight, RelativeSource={RelativeSource AncestorType=local:ShyTabs}}" />
                <Setter TargetName="Splitter"    Property="Grid.Row" Value="1" />
                <Setter TargetName="ContentDock" Property="Grid.Row" Value="2" />
                <Setter TargetName="ContentDock" Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="Splitter"    Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="Splitter"    Property="Style" Value="{StaticResource ShyTabs_Splitter_ExpandUp}" />
                <Setter TargetName="ErrTabs"     Property="TabStripPlacement" Value="Bottom" />
            </Trigger>

            <Trigger Property="ExpandDirection" Value="Left">
                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ShyTabs_ToggleButtonStyle_Left}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    
    
    <Style TargetType="{x:Type local:ShyTabs}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ShyTabs}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            >
                        <Expander Name="_expander"
                                  Header="{Binding ExpanderText, RelativeSource={RelativeSource TemplatedParent}}"
                                  IsExpanded="True" 
                                  ExpandDirection="{Binding ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}"
                                  Template="{StaticResource ShyTabs_ExpanderTemplate}"
                                  />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>