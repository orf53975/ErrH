<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ErrH.WpfTools.ResourceDictionaries"
                    xmlns:conv="clr-namespace:ErrH.WpfTools.Converters">



    <Style x:Key="SharpFont" TargetType="{x:Type Window}">
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>
    
    

    <!--
    This template explains how to render the list of commands on the left
    side in the main window (the 'Control Panel' area).
    -->
    <DataTemplate x:Key="NavigationsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
                        <Hyperlink Command="{Binding Path=Command}">
                            <TextBlock Text="{Binding Path=DisplayName}" />
                        </Hyperlink>
                    </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>



    <Style x:Key="MainListBoxStyle"
           TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MainListBoxItemsStyle}" />
        <Setter Property="AlternationCount" Value="2" />
    </Style>


    <Style x:Key="MainListBoxItemsStyle" 
           TargetType="{x:Type ListBoxItem}">

        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="10,0,0,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="White" />


        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static Member=SystemColors.InactiveSelectionHighlightBrushKey}"
                            Color="{DynamicResource ResourceKey={x:Static Member=SystemColors.HighlightColorKey}}" />            
        </Style.Resources>


        <Style.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#EEEEEEEE" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Border.IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="CornflowerBlue" />
            </MultiTrigger>

        </Style.Triggers>

    </Style>


    <conv:FirstDegreeFunctionConverter x:Key="ParentHeightToTabCtrlHeight" 
                                       A="1" B="-5" />

    <!--  render a tab item with a close button -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel>
            <Button Command="{Binding Path=CloseCommand}"
                    Style="{DynamicResource ResourceKey=CloseTabButton}"
                    DockPanel.Dock="Right" />
            <ContentPresenter Content="{Binding Path=DisplayName}" 
                              VerticalAlignment="Center" />
        </DockPanel>
    </DataTemplate>


    <!--
    This template explains how to render the 'Workspace' content area in the main window.
    -->
    <DataTemplate x:Key="WorkspacesTemplate">
            
        <TabControl IsSynchronizedWithCurrentItem="True" 
                    ItemsSource="{Binding}" 
                    ItemTemplate="{StaticResource ClosableTabItemTemplate}"
                    Margin="0,5,7,0"
                    Height="{Binding Path=ActualHeight, 
                                     Converter={StaticResource ParentHeightToTabCtrlHeight}, 
                                     RelativeSource={RelativeSource FindAncestor, 
                                                     AncestorType={x:Type HeaderedContentControl}}}">
            <TabControl.BitmapEffect>
                <DropShadowBitmapEffect Color="#AAAAAA" Direction="270" />
            </TabControl.BitmapEffect>
        </TabControl>

    </DataTemplate>


    
    
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>

                        <Border Name="Border"
                                Background="LightGray"
                                BorderBrush="LightGray" 
                                BorderThickness="1,1,1,0" 
                                CornerRadius="4,4,0,0" 
                                Margin="0,0,2,0" SnapsToDevicePixels="True" >
                            
                            <TextBlock FontSize="12" 
                                       HorizontalAlignment="Center" 
                                       Name="TextBlock" 
                                       Foreground="DarkGray">
                                
                                <ContentPresenter x:Uid="ContentSite" x:Name="ContentSite"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   ContentSource="Header"
                                                   Margin="12,2,5,2" />
                            </TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#F0F0F0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#E4E4E4" />
                            <Setter TargetName="Border" Property="Margin" Value="0,0,2,-2" />
                            <Setter TargetName="TextBlock" Property="Foreground" Value="Black" />
                            <Setter TargetName="TextBlock" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="Border" >
                            <Setter TargetName="TextBlock" Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="CloseTabButton" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="x" />
        <Setter Property="Cursor"  Value="Hand" />
        <Setter Property="Foreground"  Value="DarkGray" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontFamily" Value="Courier" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>


    <Style x:Key="SecondaryListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource SecondaryListViewItemsStyle}" />
    </Style>
    

    <Style x:Key="SecondaryListViewItemsStyle" 
           TargetType="{x:Type ListViewItem}">

        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Setter Property="Height" Value="23" />
        <Setter Property="Padding" Value="7,0,0,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="White" />
        

        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static Member=SystemColors.InactiveSelectionHighlightBrushKey}"
                            Color="{DynamicResource ResourceKey={x:Static Member=SystemColors.HighlightColorKey}}" />
        </Style.Resources>


        <Style.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#EEEEEEEE" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Border.IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="CornflowerBlue" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    
</ResourceDictionary>